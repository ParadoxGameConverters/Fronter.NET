<!-- ReSharper disable once InconsistentNaming -->
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:Fronter.ViewModels"
        xmlns:views="clr-namespace:Fronter.Views"
        xmlns:ns="clr-namespace:Fronter.Extensions"
        xmlns:vc="clr-namespace:Fronter.ValueConverters"
        xmlns:log4netCore="clr-namespace:log4net.Core;assembly=log4net"
        xmlns:models="clr-namespace:Fronter.Models"
        mc:Ignorable="d" d:DesignWidth="710" d:DesignHeight="400"
        x:DataType="viewModels:MainWindowViewModel"
        x:Class="Fronter.Views.MainWindow"
        Icon="/Assets/converter.ico"
        Title="{Binding WindowTitle}"
        MinWidth="710"
        
        ExtendClientAreaToDecorationsHint="False">

    <Design.DataContext>
        <viewModels:MainWindowViewModel />
    </Design.DataContext>

    <DockPanel>
        <DockPanel.Background>
            <ImageBrush Source="/Assets/Images/background.png" Stretch="UniformToFill" Opacity="0.05" />
        </DockPanel.Background>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{ns:Loc MENUCONVERTER}">
                <MenuItem
                    Header="{ns:Loc CHECKFORUPDATES}"
                    Command="{Binding CheckForUpdates}"
                    IsVisible="{Binding Config.UpdateCheckerEnabled}"
                    />
                <Separator/>
                <MenuItem Header="{ns:Loc EXIT}" Command="{Binding Exit}"/>
            </MenuItem>
            
            <MenuItem x:CompileBindings="False" Header="{ns:Loc LANGUAGE}" Items="{Binding LanguageMenuItems}">
                <MenuItem.ItemContainerTheme>
                    <ControlTheme TargetType="MenuItem" x:DataType="viewModels:MenuItemViewModel" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Header" Value="{Binding Header}"/>
                        <Setter Property="Command" Value="{Binding Command}"/>
                        <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
                    </ControlTheme>
                </MenuItem.ItemContainerTheme>
            </MenuItem>
            
            <MenuItem Header="{ns:Loc MENU_THEME}" Items="{Binding Themes}">
                <MenuItem.ItemContainerTheme>
                    <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" x:DataType="models:FrontendTheme">
                        <Setter Property="Header" Value="{ns:DynamicLoc LocKey}"/>
                        <Setter Property="Command" Value="{Binding ((viewModels:MainWindowViewModel)DataContext).SetThemeCommand, RelativeSource={RelativeSource AncestorType=Window, AncestorLevel=1}, FallbackValue={}}"/>
                        <Setter Property="CommandParameter" Value="{Binding Id}"/>
                    </ControlTheme>
                </MenuItem.ItemContainerTheme>
            </MenuItem>
                
            <MenuItem Header="{ns:Loc MENU_HELP}">
                <MenuItem Header="{ns:Loc ABOUT}" Command="{Binding OpenAboutDialog}"/>
                <MenuItem Header="{ns:Loc SUPPORT_US}" Command="{Binding OpenPatreonPage}"/>
            </MenuItem>
        </Menu>
        
        <Grid RowDefinitions="6*, 4, 4*" DockPanel.Dock="Bottom">
            <TabControl Grid.Column="0" Grid.Row="0" MinHeight="150">
                <TabItem Header="{ns:Loc PATHSTAB}" VerticalContentAlignment="Center">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" MinHeight="150">
                        <views:PathPickerView DataContext="{Binding PathPicker}"/>
                    </ScrollViewer>
                </TabItem>
                
                <TabItem Header="{ns:Loc MODSTAB}" VerticalContentAlignment="Center" IsVisible="{Binding ModsPickerTabVisible}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" MinHeight="150">
                        <views:ModsPickerView DataContext="{Binding ModsPicker}"/>
                    </ScrollViewer>
                </TabItem>
                
                <TabItem Header="{ns:Loc OPTIONSTAB}" VerticalContentAlignment="Center" IsVisible="{Binding OptionsTabVisible}">
                    <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" MinHeight="150">
                        <views:OptionsView DataContext="{Binding Options}" />
                    </ScrollViewer>
                </TabItem>
                
                <TabItem Header="{ns:Loc CONVERTTAB}" VerticalContentAlignment="Center">
                    <Grid ColumnDefinitions="1*,2*" RowDefinitions="Auto" Margin="5,15,5,10" MinHeight="150">
                        <StackPanel Grid.Row="0" Grid.Column="0">
                            <TextBlock Text="{ns:Loc LOGLEVEL}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            
                            <RadioButton IsChecked="{Binding Path=LogFilterLevel, FallbackValue=False, Mode=OneWay, Converter={x:Static vc:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static log4netCore:Level.Error}}"
                                         Command="{Binding ToggleLogFilterLevelCommand}"
                                         CommandParameter="Error"
                                         VerticalContentAlignment="Center"
                                         Content="{ns:Loc LOGLEVEL0}"
                                         Margin="1">
                            </RadioButton>
                            <RadioButton IsChecked="{Binding Path=LogFilterLevel, FallbackValue=False, Mode=OneWay, Converter={x:Static vc:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static log4netCore:Level.Warn}}"
                                         Command="{Binding ToggleLogFilterLevelCommand}"
                                         CommandParameter="Warn"
                                         VerticalContentAlignment="Center"
                                         Content="{ns:Loc LOGLEVEL1}"
                                         Margin="1">
                            </RadioButton>
                            <RadioButton IsChecked="{Binding Path=LogFilterLevel, FallbackValue=False, Mode=OneWay, Converter={x:Static vc:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static log4netCore:Level.Info}}"
                                         Command="{Binding ToggleLogFilterLevelCommand}"
                                         CommandParameter="Info"
                                         VerticalContentAlignment="Center"
                                         Content="{ns:Loc LOGLEVEL2}"
                                         Margin="1">
                            </RadioButton>
                            <RadioButton IsChecked="{Binding Path=LogFilterLevel, FallbackValue=False, Mode=OneWay, Converter={x:Static vc:EnumToBooleanConverter.Instance}, ConverterParameter={x:Static log4netCore:Level.Debug}}"
                                         Command="{Binding ToggleLogFilterLevelCommand}"
                                         CommandParameter="Debug"
                                         VerticalContentAlignment="Center"
                                         Content="{ns:Loc LOGLEVEL3}"
                                         Margin="1">
                            </RadioButton>
                        </StackPanel>
                        
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" >
                            <Grid ColumnDefinitions="1.8*, 1*" RowDefinitions="1*,1*,1*" Margin="10, 4, 0, 4">
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{ns:Loc CONVERTSAVING}"></TextBlock>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{ns:DynamicLoc SaveStatus}"></TextBlock>
                                
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{ns:Loc CONVERTCONVERTING}"></TextBlock>
                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{ns:DynamicLoc ConvertStatus}"></TextBlock>
                                
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="{ns:Loc CONVERTCOPYING}"></TextBlock>
                                <TextBlock Grid.Row="2" Grid.Column="1" Text="{ns:DynamicLoc CopyStatus}"></TextBlock>
                            </Grid>
                            <ProgressBar Margin="4" Height="20" Value="{Binding Progress}" BorderThickness="1" BorderBrush="Gray" IsIndeterminate="{Binding IndeterminateProgress}"/>
                            <TextBlock Text="{Binding Progress, StringFormat={}{0}%}" HorizontalAlignment="Center"></TextBlock>
                            <Button Margin="4,15,4,4" HorizontalAlignment="Center" Name="ConvertButton" Command="{Binding LaunchConverter}" IsEnabled="{Binding ConvertButtonEnabled}" Content="{ns:Loc CONVERTBUTTON}"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        
            <GridSplitter Grid.Row="1" ResizeDirection="Rows" ResizeBehavior="BasedOnAlignment" Background="Gray"/>
            
            <DataGrid Name="LogGrid" Grid.Column="0" Grid.Row="2"
                      Items="{Binding FilteredLogLines}"
                      AutoGenerateColumns="False"
                      CanUserReorderColumns="False"
                      CanUserSortColumns="False"
                      RowBackground="Transparent"
                      VerticalScrollBarVisibility="Visible"
                      GridLinesVisibility="All"
                      >
                <DataGrid.Resources>
                    <vc:LogLevelToColorNameConverter x:Key="LogLevelToColorNameConverter"/>
                </DataGrid.Resources>
                <DataGrid.Styles>
                    <Style Selector="DataGrid DataGridRow">
                        <Setter Property="Background" Value="{Binding Level, Converter={StaticResource LogLevelToColorNameConverter}}" />
                    </Style>
                </DataGrid.Styles>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{ns:Loc LOGTIME}" IsReadOnly="True" Binding="{Binding Timestamp}" />
                    <DataGridTextColumn Header="{ns:Loc LOGSEVERITY}" IsReadOnly="True" Binding="{Binding LevelName}" />
                    <DataGridTextColumn Header="{ns:Loc LOGMESSAGE}" IsReadOnly="True" Binding="{Binding Message}" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </DockPanel>
</Window>
