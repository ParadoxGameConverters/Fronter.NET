<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:Fronter.ViewModels"
             xmlns:ns="clr-namespace:Fronter.Extensions"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Fronter.Views.OptionsView"
             x:DataType="viewModels:OptionsViewModel"
             x:CompileBindings="True">
    <ItemsControl Items="{Binding Items}">
        <ItemsControl.Styles>
            <Style Selector="Border.optionCard">
                <Setter Property="Background" Value="{DynamicResource SystemChromeHighColor}" />
                <Setter Property="Margin" Value="10,10" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="MaxWidth" Value="400" />
                <Setter Property="MaxHeight" Value="500"/>
            </Style>
        </ItemsControl.Styles>
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <WrapPanel Orientation="Vertical">
                </WrapPanel>
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <Border ToolTip.Tip="{ns:DynamicLoc Tooltip}" Classes="optionCard">
                    <StackPanel>
                        <TextBlock Text="{ns:DynamicLoc DisplayName}"></TextBlock>
                        <ItemsControl 
                            Items="{Binding CheckBoxSelector.CheckBoxOptions, FallbackValue={}}"
                            IsVisible="{Binding CheckBoxSelector, Converter={x:Static ObjectConverters.IsNotNull}}" 
                        >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border ToolTip.Tip="{ns:DynamicLoc Tooltip}">
                                        <CheckBox
                                            Content="{ns:DynamicLoc DisplayName}"
                                            IsChecked="{Binding Value, Mode=TwoWay}"
                                        />
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        
                        <ComboBox
                            Items="{Binding RadioSelector.RadioOptions, FallbackValue={}}"
                            IsVisible="{Binding RadioSelector, Converter={x:Static ObjectConverters.IsNotNull}}"
                            SelectedItem="{Binding RadioSelector.SelectedOption, FallbackValue={}}"
                            AutoScrollToSelectedItem="True"
                        >
                            <ComboBox.Styles>
                                <Style Selector="ComboBoxItem">
                                    <Setter Property="ToolTip.Tip" Value="{ns:DynamicLoc Tooltip}" />
                                </Style>
                            </ComboBox.Styles>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{ns:DynamicLoc DisplayName}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                       
                        <Border 
                            ToolTip.Tip="{ns:DynamicLoc TextSelector.Tooltip, FallbackValue={}}"
                            IsVisible="{Binding TextSelector, Converter={x:Static ObjectConverters.IsNotNull}}"
                        >
                            <TextBox 
                                Text="{Binding TextSelector.Value, FallbackValue={}}"
                                IsEnabled="{Binding TextSelector.Editable, FallbackValue=false}"
                            />
                        </Border>
                        
                        <DatePicker 
                            ToolTip.Tip="{ns:DynamicLoc DateSelector.Tooltip, FallbackValue={}}"
                            SelectedDate="{Binding DateSelector.DateTimeOffsetValue, FallbackValue={}}" 
                            IsVisible="{Binding DateSelector, Converter={x:Static ObjectConverters.IsNotNull}}"
                            IsEnabled="{Binding DateSelector.Editable, FallbackValue=false}"
                            MinYear="{Binding DateSelector.MinDate, FallbackValue={}}"
                            MaxYear="{Binding DateSelector.MaxDate, FallbackValue={}}"
                        />
                    </StackPanel>
                </Border>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</UserControl>
